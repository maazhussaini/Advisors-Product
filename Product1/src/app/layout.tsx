// import type { Metadata } from 'next';
// import { Poppins } from 'next/font/google';
// import '@/styles/globals.css';
// import StoreProvider from '@/lib/Provider/StoreProvider';
// import { SideNav } from '@/common/components/SideNav';

// const poppins = Poppins({
//   subsets: ['latin'], // Add subsets you need (like 'latin-ext' if required)
//   weight: ['400', '500', '600', '700'], // Define the font weights you need
//   variable: '--font-poppins', // Define a custom CSS variable
// });


// export const metadata: Metadata = {
//   title: 'Next Redux Typescript Tailwind',
//   description: 'Generated by create next app',
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <StoreProvider>
//         {/* Wrapper for flex layout */}
//         <div className="flex min-h-screen">
//           {/* Sidebar */}
//           <aside className="w-64 h-screen text-white fixed">
//             <SideNav />
//           </aside>

//           {/* Main content */}
//           <main className="ml-64 flex-1 p-4">{children}</main>
//         </div>
//       </StoreProvider>
//     </html>
//   );
// }

import type { Metadata } from 'next';
import { Poppins } from 'next/font/google';
import '@/styles/globals.css';
import StoreProvider from '@/lib/Provider/StoreProvider';
import { SideNav } from '@/common/components/SideNav';

const poppins = Poppins({
  subsets: ['latin'], // Add subsets you need (like 'latin-ext' if required)
  weight: ['400', '500', '600', '700'], // Define the font weights you need
  variable: '--font-poppins', // Define a custom CSS variable
});

export const metadata: Metadata = {
  title: 'Next Redux Typescript Tailwind',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className={poppins.variable}>
      {/* Head is required for Next.js metadata */}
      <head />
      <body>
        <StoreProvider>
          {/* Wrapper for flex layout */}
          <div className="flex min-h-screen">
            {/* Sidebar */}
            <aside className="w-64 h-screen text-white fixed">
              <SideNav />
            </aside>

            {/* Main content */}
            <main className="ml-64 flex-1 p-4">{children}</main>
          </div>
        </StoreProvider>
      </body>
    </html>
  );
}
